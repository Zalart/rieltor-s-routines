{"ast":null,"code":"var _jsxFileName = \"/home/artur/workshop/react/realtor-s-routines/view/src/pages/login.js\";\nimport React, { Component } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  customError: {\n    color: 'red',\n    fontSize: '0.8rem',\n    marginTop: 10\n  },\n  progess: {\n    position: 'absolute'\n  }\n});\n\nclass login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      axios.post('/login', userData).then(response => {\n        localStorage.setItem('AuthToken', `Bearer ${response.data.token}`);\n        this.setState({\n          loading: false\n        });\n        this.props.history.push('/home');\n      }).catch(error => {\n        this.setState({\n          errors: error.response.data,\n          loading: false\n        });\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      errors: [],\n      loading: false\n    };\n  } // заменить!!! Deprecated! getDerivedStateFromProps ???\n\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      errors,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.avatar,\n          children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"email\",\n            label: \"Email Address\",\n            name: \"email\",\n            autoComplete: \"email\",\n            autoFocus: true,\n            helperText: errors.email,\n            error: errors.email ? true : false,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            name: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            id: \"password\",\n            autoComplete: \"current-password\",\n            helperText: errors.password,\n            error: errors.password ? true : false,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.submit,\n            onClick: this.handleSubmit,\n            disabled: loading || !this.state.email || !this.state.password,\n            children: [\"Sign In\", loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 30,\n              className: classes.progess\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"signup\",\n                variant: \"body2\",\n                children: \"Don't have an account? Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 21\n          }, this), errors.general && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            className: classes.customError,\n            children: errors.general\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default withStyles(styles)(login);","map":{"version":3,"sources":["/home/artur/workshop/react/realtor-s-routines/view/src/pages/login.js"],"names":["React","Component","Avatar","Button","CssBaseline","TextField","Link","Grid","LockOutlinedIcon","Typography","withStyles","Container","CircularProgress","axios","styles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","customError","color","fontSize","progess","position","login","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","loading","userData","email","state","password","post","then","response","localStorage","setItem","data","token","history","push","catch","error","errors","componentWillReceiveProps","nextProps","UI","render","classes","general"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport axios from 'axios';\n\nconst styles = (theme) =>({\n    paper: {\n\t\tmarginTop: theme.spacing(8),\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center'\n\t},\n\tavatar: {\n\t\tmargin: theme.spacing(1),\n\t\tbackgroundColor: theme.palette.secondary.main\n\t},\n\tform: {\n\t\twidth: '100%',\n\t\tmarginTop: theme.spacing(1)\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2)\n\t},\n\tcustomError: {\n\t\tcolor: 'red',\n\t\tfontSize: '0.8rem',\n\t\tmarginTop: 10\n\t},\n\tprogess: {\n\t\tposition: 'absolute'\n\t}\n});\n\n\nclass login extends Component {\nconstructor(props){\n    super(props);\n    this.state = {\n        email: '',\n        password: '',\n        errors: [],\n        loading: false\n    };\n}\n// заменить!!! Deprecated! getDerivedStateFromProps ???\ncomponentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n        this.setState({\n            errors: nextProps.UI.errors\n        });\n    }\n}\n\nhandleChange = (event) => {\n    this.setState({\n        [event.target.name]: event.target.value\n    });\n};\n\n\nhandleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ loading: true });\n    const userData = {\n        email: this.state.email,\n        password: this.state.password\n    };\n    axios\n        .post('/login', userData)\n        .then((response) => {\n            localStorage.setItem('AuthToken', `Bearer ${response.data.token}`);\n            this.setState({ \n                loading: false,\n            });\t\t\n            this.props.history.push('/home');\n        })\n        .catch((error) => {\t\t\t\t\n            this.setState({\n                errors: error.response.data,\n                loading: false\n            });\n        });\n};\n\nrender() {\n    const { classes } = this.props;\n    const { errors, loading } = this.state;\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Login\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        helperText={errors.email}\n                        error={errors.email ? true : false}\n                        onChange={this.handleChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        helperText={errors.password}\n                        error={errors.password ? true : false}\n                        onChange={this.handleChange}\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={this.handleSubmit}\n                        disabled={loading || !this.state.email || !this.state.password}\n                    >\n                        Sign In\n                        {loading && <CircularProgress size={30} className={classes.progess} />}\n                    </Button>\n                    <Grid container>\n                        <Grid item>\n                            <Link href=\"signup\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                    {errors.general && (\n                        <Typography variant=\"body2\" className={classes.customError}>\n                            {errors.general}\n                        </Typography>\n                    )}\n                </form>\n            </div>\n        </Container>\n    );\n}\n\n\n}\n\nexport default withStyles(styles)(login);"]},"metadata":{},"sourceType":"module"}