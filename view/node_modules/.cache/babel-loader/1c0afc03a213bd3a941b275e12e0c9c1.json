{"ast":null,"code":"var _jsxFileName = \"/home/artur/workshop/react/realtor-s-routines/view/src/components/FIleUploader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { FilePond, File, registerPlugin } from 'react-filepond';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond/dist/filepond.min.css';\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nregisterPlugin(FilePondPluginImagePreview, FilePondPluginImageExifOrientation);\n/* interface FileUploaderProps {\n    onUploadComplete: () => void;\n    fileTypes: string[];\n} */\n\nconst FileUploader = ({\n  objectId\n}) => {\n  _s();\n\n  const [files, setFiles] = useState([]); //функция для сортировки файлов\n\n  /* const setNewOrder = (files) => {\n      files.length && console.log(files[0].id)\n      return setFiles\n      \n  } */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FilePond, {\n      files: files,\n      onupdatefiles: setFiles,\n      allowMultiple: true,\n      allowReorder: true,\n      dropOnPage: true,\n      server: {\n        process: {\n          url: `http://localhost:5000/realtor-s-routines/us-central1/api/object/${objectId}/images`,\n          headers: {\n            'Authorization': localStorage.getItem('AuthToken')\n          },\n\n          /*   ondata: (formData) => {\n                \n            formData.append('imageId', files[i].id);\n            i++;\n            return formData;\n            }, */\n          onload: response => response\n        }\n      },\n      onreorderfiles: setFiles,\n      name: \"files\",\n      credits: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 1\n    }, this), console.log(files), files.length && console.log(files[0].id)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FileUploader, \"aPldHTVBr/g7fY6pAkrAgkA0SoA=\");\n\n_c = FileUploader;\nexport default FileUploader;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"sources":["/home/artur/workshop/react/realtor-s-routines/view/src/components/FIleUploader.js"],"names":["React","useState","FilePond","File","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FileUploader","objectId","files","setFiles","process","url","headers","localStorage","getItem","onload","response","console","log","length","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,QAAR,EAAkBC,IAAlB,EAAwBC,cAAxB,QAA6C,gBAA7C;AACA,OAAOC,kCAAP,MAA+C,wCAA/C;AACA,OAAOC,0BAAP,MAAuC,+BAAvC;AAEA,OAAO,gCAAP;AACA,OAAO,sEAAP;;AACAF,cAAc,CAACE,0BAAD,EAA6BD,kCAA7B,CAAd;AAEA;AACA;AACA;AACA;;AAEA,MAAME,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AACjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC,CADiC,CAGrC;;AACI;AACJ;AACA;AACA;AACA;;AACI,sBACI;AAAA,4BACR,QAAC,QAAD;AACA,MAAA,KAAK,EAAEQ,KADP;AAEA,MAAA,aAAa,EAAEC,QAFf;AAGA,MAAA,aAAa,EAAE,IAHf;AAIA,MAAA,YAAY,EAAE,IAJd;AAKA,MAAA,UAAU,MALV;AAMA,MAAA,MAAM,EAAE;AACIC,QAAAA,OAAO,EAAE;AACPC,UAAAA,GAAG,EAAG,mEAAkEJ,QAAS,SAD1E;AAENK,UAAAA,OAAO,EAAE;AACP,6BAAiBC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADV,WAFH;;AAKR;AACb;AACA;AACA;AACA;AACA;AACgBC,UAAAA,MAAM,EAAGC,QAAD,IAAeA;AAXlB;AADb,OANR;AAwBI,MAAA,cAAc,EAAEP,QAxBpB;AAyBA,MAAA,IAAI,EAAC,OAzBL;AA0BA,MAAA,OAAO,EAAE;AA1BT;AAAA;AAAA;AAAA;AAAA,YADQ,EA6BPQ,OAAO,CAACC,GAAR,CAAYV,KAAZ,CA7BO,EA8BPA,KAAK,CAACW,MAAN,IAAgBF,OAAO,CAACC,GAAR,CAAYV,KAAK,CAAC,CAAD,CAAL,CAASY,EAArB,CA9BT;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH,CA3CD;;GAAMd,Y;;KAAAA,Y;AA4CN,eAAeA,YAAf","sourcesContent":["import React, {useState} from 'react';\nimport {FilePond, File, registerPlugin} from 'react-filepond';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\n\nimport 'filepond/dist/filepond.min.css';\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nregisterPlugin(FilePondPluginImagePreview, FilePondPluginImageExifOrientation);\n\n/* interface FileUploaderProps {\n    onUploadComplete: () => void;\n    fileTypes: string[];\n} */\n\nconst FileUploader = ({objectId}) => {\n    const [files, setFiles] = useState([]);\n    \n//функция для сортировки файлов\n    /* const setNewOrder = (files) => {\n        files.length && console.log(files[0].id)\n        return setFiles\n        \n    } */\n    return (\n        <div>\n<FilePond\nfiles={files}\nonupdatefiles={setFiles}\nallowMultiple={true}\nallowReorder={true}\ndropOnPage\nserver={{\n            process: {\n              url: `http://localhost:5000/realtor-s-routines/us-central1/api/object/${objectId}/images`,\n               headers: {\n                 'Authorization': localStorage.getItem('AuthToken'),\n               },\n             /*   ondata: (formData) => {\n                   \n               formData.append('imageId', files[i].id);\n               i++;\n               return formData;\n               }, */\n                onload: (response) =>  response,\n            \n            }\n\n           }}\n           \n    onreorderfiles={setFiles}\nname=\"files\"\ncredits={false}\n/>\n{console.log(files)}\n{files.length && console.log(files[0].id)}\n        </div>\n    )\n}\nexport default FileUploader;"]},"metadata":{},"sourceType":"module"}